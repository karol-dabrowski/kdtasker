parameters:

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: true

    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Tasker,Kernel.php}'

    # Controllers

    App\Controller\ApiController:
        arguments: ['@prooph_service_bus.tasker_command_bus', '@prooph_service_bus.message_factory']
        tags: ['controller.service_arguments']

    App\Controller\AuthController:
        arguments: ['@prooph_service_bus.user_command_bus', '@prooph_service_bus.message_factory']
        tags: ['controller.service_arguments']

    # Console commands

    App\Command\CreateEventStreamCommand:
        arguments: ['@prooph_event_store.mysql_event_store.tasker_store']

    # Command handlers - task context

    Tasker\Model\Task\CommandHandler\CreateTaskHandler:
        arguments: ['@task_repository']
        tags:
            - { name: 'prooph_service_bus.tasker_command_bus.route_target', message_detection: true }

    # Command handlers - user context

    Tasker\Model\User\CommandHandler\RegisterUserHandler:
        arguments: ['@App\Repository\UserRepository']
        tags:
            - { name: 'prooph_service_bus.user_command_bus.route_target', message_detection: true }

    # Doctrine user subscribers

    App\EventSubscriber\UserRegisteredSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    # Providers

    App\Security\UserProvider:
        arguments: ['@App\Repository\UserRepository']

    # Event listeners

    App\Security\EventListener\JWTCreatedListener:
        arguments: ['@request_stack']
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    App\Security\EventListener\AuthenticationSuccessListener:
        arguments: ['@request_stack', '%lexik_jwt_authentication.token_ttl%']
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }